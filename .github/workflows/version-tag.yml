name: CI and Merge

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main

jobs:
  # „Éï„Ç©„Éº„Éû„ÉÉ„Éà„Å®„É™„É≥„ÉàÔºà‰∏¶ÂàóÂÆüË°åÔºâ
  lint-and-format:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    strategy:
      matrix:
        check: [lint, fmt]
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run ${{ matrix.check }} in Docker
        run: |
          if docker pull ghcr.io/${{ github.repository }}/e2e-test:latest 2>/dev/null; then
            echo "üê≥ Using Docker image for ${{ matrix.check }}"
            docker run --rm \
              -v ${{ github.workspace }}:/app:ro \
              -w /app \
              ghcr.io/${{ github.repository }}/e2e-test:latest \
              ${{ matrix.check }}
          else
            echo "üì¶ Fallback to npm for ${{ matrix.check }}"
            export PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1
            npm ci --prefer-offline --no-audit --no-fund --silent
            make ${{ matrix.check }}
          fi
        timeout-minutes: 5

  # „ÉÜ„Çπ„ÉàÔºàÁ®ÆÈ°ûÂà•‰∏¶ÂàóÂÆüË°åÔºâ
  parallel-tests:
    runs-on: ubuntu-latest
    needs: lint-and-format
    permissions:
      contents: read
      packages: read
    strategy:
      matrix:
        test-type: [unit, lightweight, e2e-ci]
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run ${{ matrix.test-type }} tests in Docker
        run: |
          if docker pull ghcr.io/${{ github.repository }}/e2e-test:latest 2>/dev/null; then
            echo "üê≥ Running ${{ matrix.test-type }} tests in Docker"
            docker run --rm \
              -v ${{ github.workspace }}:/app:ro \
              -w /app \
              -e CI=true \
              -e NODE_ENV=test \
              ghcr.io/${{ github.repository }}/e2e-test:latest \
              test:${{ matrix.test-type }}
          else
            echo "üì¶ Fallback to npm for ${{ matrix.test-type }} tests"
            export PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1
            npm ci --prefer-offline --no-audit --no-fund --silent
            export CI=true NODE_ENV=test
            npm run test:${{ matrix.test-type }}
          fi
        timeout-minutes: 8

  merge-to-main:
    needs: [lint-and-format, parallel-tests]
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Merge to main
        run: |
          git checkout main
          git merge develop --no-ff -m "üîÄ Merge develop to main"
          git push origin main

