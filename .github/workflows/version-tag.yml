name: CI and Release

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main

jobs:
  ci-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run all checks
        run: make check

  release-to-main:
    needs: ci-checks
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Get latest tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.7.0")
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Generate new version
        id: generate_version
        run: |
          LATEST_TAG="${{ steps.get_latest_tag.outputs.latest_tag }}"
          VERSION=${LATEST_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="v${MAJOR}.${MINOR}.${NEW_PATCH}"
          NEW_VERSION_NUMBER="${MAJOR}.${MINOR}.${NEW_PATCH}"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "new_version_number=$NEW_VERSION_NUMBER" >> $GITHUB_OUTPUT

      - name: Update package.json version
        run: |
          npm version "${{ steps.generate_version.outputs.new_version_number }}" --no-git-tag-version

      - name: Commit version bump
        run: |
          git add package.json package-lock.json
          git commit -m "🚀 Release ${{ steps.generate_version.outputs.new_version }}"

      - name: Create and push tag
        run: |
          git tag "${{ steps.generate_version.outputs.new_version }}"
          git push origin "${{ steps.generate_version.outputs.new_version }}"

      - name: Update latest tag
        run: |
          git tag -f latest
          git push origin latest --force

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.generate_version.outputs.new_version }}
          release_name: Release ${{ steps.generate_version.outputs.new_version }}
          body: |
            🚀 自動リリース ${{ steps.generate_version.outputs.new_version }}
            
            ## インストール方法
            ```bash
            npm install -g https://github.com/tKwbr999/msearch.git#main
            ```
            
            ## 最新タグでのインストール
            ```bash
            npm install -g https://github.com/tKwbr999/msearch.git#${{ steps.generate_version.outputs.new_version }}
            ```
          draft: false
          prerelease: false

      - name: Merge to main
        run: |
          git checkout main
          git merge develop --no-ff -m "🚀 Release ${{ steps.generate_version.outputs.new_version }} from develop"
          git push origin main

      - name: Push updated develop
        run: |
          git checkout develop
          git push origin develop

