# CI/CD ワークフロー - 効率的な並列実行とテスト
#
# トリガー条件:
# - developブランチへのpush
# - 全てのブランチへのPR
# - 手動実行 (workflow_dispatch)
#
# 実行フロー:
# 1. check: フォーマット・リントチェック (最小依存関係)
# 2. unit-tests: 単体テスト (check完了後)
# 3. e2e-tests: E2Eテスト (Playwright Docker環境)
# 4. merge-to-main: mainへのPRの場合のみ自動マージ

name: CI/CD Pipeline

on:
  push:
    branches: [ develop ]
  pull_request:
    # 全てのブランチへのPRで実行
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache dependencies for lint/format
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules/.cache
          key: lint-format-deps-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            lint-format-deps-${{ runner.os }}-

      - name: Install minimal dependencies for formatting and linting
        run: |
          export PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1
          export PUPPETEER_SKIP_DOWNLOAD=1
          npm install prettier eslint @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint-config-prettier eslint-plugin-prettier typescript@~5.5.0 --no-save --silent
        timeout-minutes: 2

      - name: Check formatting
        run: npx prettier --check "**/*.{ts,json,md}" --ignore-path .prettierignore
        timeout-minutes: 1

      - name: Run linting
        run: npx eslint . --ext .ts --ignore-path .eslintignore
        timeout-minutes: 1

  unit-tests:
    runs-on: ubuntu-latest
    needs: [check]
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: make install

      - name: Run unit tests
        run: make test-unit

  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container:
      image: mcr.microsoft.com/playwright:v1.42.1-jammy
      options: --user 1001
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: make install

      - name: Run E2E tests
        run: npm run test:e2e-ci
        env:
          CI: true
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1

  merge-to-main:
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests]
    # mainブランチへのPRの場合のみ自動マージを実行
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge to main
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout main
          git merge --no-ff ${{ github.head_ref }} -m "Merge pull request #${{ github.event.number }} from ${{ github.head_ref }}"
          git push origin main
