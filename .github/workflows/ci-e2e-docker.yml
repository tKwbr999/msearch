# CI/CD ワークフロー - 効率的な並列実行とテスト
#
# 実行フロー:
# 1. 並列実行: fmt, lint, docker-build
# 2. E2Eテスト: docker-build完了後にPlaywrightテスト実行
# 3. その他テスト: fmt/lint完了後に実行
# 4. 全完了後: develop→main自動マージ

name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  # 並列実行グループ1: フォーマットチェック
  format-check:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Check formatting
        run: npm run fmt:check

  # 並列実行グループ1: リントチェック
  lint-check:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Run linting
        run: npm run lint

  # その他テスト: lint/format完了後に実行
  unit-tests:
    runs-on: ubuntu-latest
    needs: [format-check, lint-check]
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Run unit tests
        run: npm run test:unit

  # E2Eテスト: Dockerイメージ完成後に実行
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container:
      image: mcr.microsoft.com/playwright:v1.42.1-jammy
      options: --user 1001
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Run E2E tests
        run: npm run test:e2e-ci
        env:
          CI: true
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1

  # 全テスト完了後: develop→main自動マージ
  merge-to-main:
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests]
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge to main
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout main
          git merge --no-ff ${{ github.head_ref }} -m "Merge pull request #${{ github.event.number }} from ${{ github.head_ref }}"
          git push origin main
