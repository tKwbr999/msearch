# GitHub Release with npm package workflow
# This workflow creates GitHub releases with packaged tarballs for easy installation

name: Release Package

on:
  push:
    branches: [ main ]
    paths:
      - 'miyako-maps-search.js'
      - 'package.json'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Check if this is a new version
        id: version-check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Check if tag already exists
          if git tag --list | grep -q "^v$CURRENT_VERSION$"; then
            echo "tag-exists=true" >> $GITHUB_OUTPUT
            echo "⚠️ Tag v$CURRENT_VERSION already exists, skipping release"
          else
            echo "tag-exists=false" >> $GITHUB_OUTPUT
            echo "✅ New version v$CURRENT_VERSION detected"
          fi

      - name: Create package tarball
        if: steps.version-check.outputs.tag-exists == 'false'
        run: |
          # Ensure the executable has correct permissions
          chmod +x miyako-maps-search.js
          
          # Create package tarball
          npm pack
          
          # Rename to include version for clarity
          VERSION=$(node -p "require('./package.json').version")
          mv msearch-$VERSION.tgz msearch-v$VERSION.tgz
          
          echo "📦 Package created: msearch-v$VERSION.tgz"
          tar -tzf msearch-v$VERSION.tgz | head -10

      - name: Create GitHub Release
        if: steps.version-check.outputs.tag-exists == 'false'
        run: |
          VERSION=$(node -p "require('./package.json').version")
          
          # Create release notes
          cat > release-notes.md << 'EOF'
          ## Installation
          
          Install directly from this release:
          ```bash
          npm install -g https://github.com/tKwbr999/msearch/releases/download/v$VERSION/msearch-v$VERSION.tgz
          ```
          
          Or install from GitHub repository:
          ```bash
          npm install -g https://github.com/tKwbr999/msearch.git
          ```
          
          ## Usage
          
          After installation, use the `msearch` command:
          ```bash
          msearch --help
          msearch レストラン
          msearch カフェ -l
          ```
          
          ## What's included
          
          - 🎯 宮古諸島専用 Google Maps 検索 CLI ツール
          - 🏝️ 宮古島、池間島、来間島、伊良部島、下地島、多良間島、水納島をカバー
          - 🔍 ターミナル表示 (`-l` オプション) とブラウザ表示の両方をサポート
          - 🌐 日本語と英語のキーワード検索に対応
          EOF
          
          # Create release
          gh release create "v$VERSION" \
            --title "msearch v$VERSION" \
            --notes-file release-notes.md \
            --latest \
            msearch-v$VERSION.tgz
            
          echo "🚀 Release v$VERSION created successfully!"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test installation from release
        if: steps.version-check.outputs.tag-exists == 'false'
        run: |
          VERSION=$(node -p "require('./package.json').version")
          
          # Test installation from local tarball
          echo "🧪 Testing installation from tarball..."
          npm install -g ./msearch-v$VERSION.tgz
          
          # Test command execution
          echo "🧪 Testing msearch command..."
          msearch --help
          
          echo "✅ Installation test passed!"